<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:ES.Tools.Controls;assembly=ES.Tools"
                    xmlns:converters="clr-namespace:ES.Tools.Converters;assembly=ES.Tools"
                    xmlns:vm="clr-namespace:ES.Tools.TestApp.ViewModels">

  <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <converters:ColorToStringConverter x:Key="ColorToStringConverter" />
  <converters:DateTimeToTimeSpanConverter x:Key="DateTimeToTimeSpanConverter" />
  <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
  <converters:TextTrimmingConverter x:Key="TextTrimmingConverter" />
  <converters:NegationConverter x:Key="NegationConverter" />

  <DataTemplate DataType="{x:Type vm:ColorToStringConverterViewModel}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <TextBox Text="{Binding ColorText, UpdateSourceTrigger=PropertyChanged}" />
      <Ellipse Margin="10,0" Grid.Column="1">
        <Ellipse.Fill>
          <SolidColorBrush Color="{Binding ColorText, Converter={StaticResource ColorToStringConverter}}" />
        </Ellipse.Fill>
      </Ellipse>
    </Grid>
  </DataTemplate>

  <DataTemplate DataType="{x:Type vm:BooleanToVisibilityConverterViewModel}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <CheckBox IsChecked="{Binding Value, UpdateSourceTrigger=PropertyChanged}">Check to show control</CheckBox>
      <Ellipse Margin="10,0" Visibility="{Binding Value, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.Column="1">
        <Ellipse.Fill>
          <SolidColorBrush Color="Green" />
        </Ellipse.Fill>
      </Ellipse>
    </Grid>
  </DataTemplate>

  <DataTemplate DataType="{x:Type vm:InverseBooleanToVisibilityConverterViewModel}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <CheckBox IsChecked="{Binding Value, UpdateSourceTrigger=PropertyChanged}">Uncheck to show control</CheckBox>
      <Ellipse Margin="10,0" Visibility="{Binding Value, Converter={StaticResource InverseBooleanToVisibilityConverter}}" Grid.Column="1">
        <Ellipse.Fill>
          <SolidColorBrush Color="Blue" />
        </Ellipse.Fill>
      </Ellipse>
    </Grid>
  </DataTemplate>

  <DataTemplate DataType="{x:Type vm:TextTrimmingConverterViewModel}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <TextBox Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
      <TextBlock Margin="10,0" Text="{Binding Text, Converter={StaticResource TextTrimmingConverter}, ConverterParameter=15}" Grid.Column="1" />
    </Grid>
  </DataTemplate>

  <DataTemplate DataType="{x:Type vm:DateTimeToTimeSpanConverterViewModel}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <TextBox Text="{Binding Time, UpdateSourceTrigger=PropertyChanged}" />
      <TextBlock Margin="10,0" Text="{Binding Time, Converter={StaticResource DateTimeToTimeSpanConverter}}" Grid.Column="1" />
    </Grid>
  </DataTemplate>

  <DataTemplate DataType="{x:Type vm:NegationConverterViewModel}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <CheckBox IsChecked="{Binding Value, UpdateSourceTrigger=PropertyChanged}">Check to toggle other CheckBox</CheckBox>
      <CheckBox Margin="10,0"
                IsChecked="{Binding Value, Converter={StaticResource NegationConverter}}"
                IsEnabled="False"
                Grid.Column="1" />
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="YellowCircleText">
    <Grid>
      <Ellipse Fill="LightYellow" Stroke="Black" StrokeThickness="1" />
      <TextBlock Margin="10" Text="{Binding Text}" />
    </Grid>
  </DataTemplate>

  <DataTemplate DataType="{x:Type vm:CarViewModel}">
    <Grid Background="LightYellow">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
      </Grid.RowDefinitions>
      <TextBlock Margin="5"
                 HorizontalAlignment="Center"
                 FontWeight="Bold"
                 Text="Car"
                 Grid.ColumnSpan="2" />
      <TextBlock Margin="5" Text="Brand:" Grid.Row="1" />
      <TextBox Margin="2"
               Text="{Binding Brand}"
               Grid.Row="1"
               Grid.Column="1" />
      <TextBlock Margin="5" Text="Model:" Grid.Row="2" />
      <TextBox Margin="2"
               Text="{Binding Model}"
               Grid.Row="2"
               Grid.Column="1" />
      <TextBlock Margin="5" Text="Year:" Grid.Row="3" />
      <TextBox Margin="2"
               Text="{Binding Year}"
               Grid.Row="3"
               Grid.Column="1" />
      <TextBlock Margin="5" Text="Wheels:" Grid.Row="4" />
      <TextBlock Margin="5"
                 Text="{Binding Wheels}"
                 Grid.Row="4"
                 Grid.Column="1" />
    </Grid>
  </DataTemplate>

  <DataTemplate DataType="{x:Type vm:BicycleViewModel}">
    <Grid Background="LightGreen">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition />
        <RowDefinition />
      </Grid.RowDefinitions>
      <TextBlock Margin="5"
                 HorizontalAlignment="Center"
                 FontWeight="Bold"
                 Text="Bicycle"
                 Grid.ColumnSpan="2" />
      <TextBlock Margin="5" Text="Brand:" Grid.Row="1" />
      <TextBox Margin="2"
               Text="{Binding Brand}"
               Grid.Row="1"
               Grid.Column="1" />
      <TextBlock Margin="5" Text="Wheels:" Grid.Row="2" />
      <TextBlock Margin="5"
                 Text="{Binding Wheels}"
                 Grid.Row="2"
                 Grid.Column="1" />
    </Grid>
  </DataTemplate>

  <DataTemplate DataType="{x:Type vm:AccordionContentViewModel}">
    <controls:AccordionItem Content="{Binding Content}" Header="{Binding Header}" />
  </DataTemplate>

</ResourceDictionary>