<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:controls="clr-namespace:ES.Tools.Controls" xmlns:shapes="clr-namespace:ES.Tools.Shapes">

  <Storyboard x:Key="RotateAnimation">
    <DoubleAnimation RepeatBehavior="Forever"
                     Storyboard.TargetName="PART_MainGrid"
                     Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                     To="360"
                     Duration="0:0:5" />
  </Storyboard>

  <ControlTemplate x:Key="ProgressCircleTemplate" TargetType="{x:Type controls:ProgressCircle}">
    <Grid x:Name="PART_MainGrid" MinWidth="50" MinHeight="50" RenderTransformOrigin="0.5, 0.5">
      <Grid.RenderTransform>
        <RotateTransform />
      </Grid.RenderTransform>
      <shapes:Donut x:Name="PART_Background"
                    DonutWidth="{TemplateBinding CircleWidth}"
                    Fill="{TemplateBinding Background}"
                    Stroke="{x:Null}"
                    StrokeThickness="{TemplateBinding BorderThickness}" />
      <shapes:DonutSegment x:Name="PART_Bar"
                           DonutWidth="{TemplateBinding CircleWidth}"
                           Fill="{TemplateBinding Foreground}"
                           StartAngle="0"
                           Stroke="{TemplateBinding BorderBrush}"
                           StrokeThickness="{TemplateBinding BorderThickness}" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsRotating" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource RotateAnimation}" />
        </Trigger.EnterActions>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="IndeterminateProgressCircleTemplate" TargetType="{x:Type controls:ProgressCircle}">
    <Grid x:Name="PART_MainGrid" MinWidth="50" MinHeight="50" RenderTransformOrigin="0.5, 0.5">
      <Grid.RenderTransform>
        <RotateTransform />
      </Grid.RenderTransform>
      <shapes:Donut x:Name="PART_Background"
                    DonutWidth="{TemplateBinding CircleWidth}"
                    Fill="{TemplateBinding Background}"
                    Stroke="{x:Null}"
                    StrokeThickness="{TemplateBinding BorderThickness}" />
      <shapes:DonutSegment x:Name="PART_Bar"
                           DonutWidth="{TemplateBinding CircleWidth}"
                           Fill="{TemplateBinding Foreground}"
                           Stroke="{TemplateBinding BorderBrush}"
                           StrokeThickness="{TemplateBinding BorderThickness}">
        <shapes:DonutSegment.Triggers>
          <EventTrigger RoutedEvent="shapes:DonutSegment.Loaded">
            <BeginStoryboard>
              <Storyboard RepeatBehavior="Forever">
                <DoubleAnimation Storyboard.TargetName="PART_Bar"
                                 Storyboard.TargetProperty="EndAngle"
                                 From="0.0"
                                 To="360.0"
                                 Duration="0:0:3" />
                <DoubleAnimation BeginTime="0:0:3"
                                 Storyboard.TargetName="PART_Bar"
                                 Storyboard.TargetProperty="StartAngle"
                                 From="0.0"
                                 To="360.0"
                                 Duration="0:0:3" />
              </Storyboard>
            </BeginStoryboard>
          </EventTrigger>
        </shapes:DonutSegment.Triggers>
      </shapes:DonutSegment>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsRotating" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource RotateAnimation}" />
        </Trigger.EnterActions>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type controls:ProgressCircle}">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="Black" />
    <Setter Property="Foreground" Value="White" />
    <Setter Property="Background" Value="{x:Null}" />
    <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
    <Setter Property="RenderTransform">
      <Setter.Value>
        <RotateTransform />
      </Setter.Value>
    </Setter>
    <Setter Property="Template" Value="{StaticResource ProgressCircleTemplate}" />
    <Style.Triggers>
      <Trigger Property="IsIndeterminate" Value="True">
        <Setter Property="Template" Value="{StaticResource IndeterminateProgressCircleTemplate}" />
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>